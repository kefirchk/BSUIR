#include "Header.h"               //подключение библиотеки

int input_int()                   //функция ввода целого числа
{
	int k, n, f = 0; char symbol; //промежуточные переменные для проверки и ввода
	do
	{
		if (f++) printf("%c[%d;%dmОшибка ввода!%c[%dm\n", 27, 1, 31, 27, 0);
		rewind(stdin);                              //чистка буфера
		k = scanf_s("%d%c", &n, &symbol);           //ввод значения
		if (k > 1 && n > 0 && symbol == '\n') break;  //если соблюдены все условия, то прервать цикл
	} while (1);
	return n;                     //вернуть вводимое число
}

int offer()  //функция выбора, которая решает продолжить ли выполнение программы  
{
	char s;                       //объявление промежуточной переменной
	for (;;)
	{
		rewind(stdin);            //чистка буфера
		s = _getch();             //ввод y или n(выбор для продолжения или нет)
		if (s == 'y') return 1;   //выбрано продолжение программы           
		if (s == 'n') return 0;   //выбрано завершение программы
		else printf("%c[%d;%dm\nОшибка!\nХотите продолжить?(y\\n)%c[%dm\n", 27, 1, 31, 27, 0); //текст об ошибке
	}
}

void instructions()               //функция вывода инструкций работы программы
{
	printf("%c[%d;%dmВыберите режим работы:%c[%dm", 27, 1, 34, 27, 0);
	puts("\n0 - создать готовое дерево по массиву: 8, 5, 3, 2, 1, 4, 7, 6, 12, 10, 9, 11, 13, 14, 16, 15, 17"
		"\n1 - создать дерево нерекурсивно"
		"\n2 - создать дерево рекурсивно"
		"\n3 - нерукурсивный вывод содержимого дерева"
		"\n4 - рекурсивный вывод содержимого дерева"
		"\n5 - псевдографический вывод содержимого дерева"
		"\n6 - удаление любого узла из дерева"
		"\n7 - удалить дерево"
		"\n8 - выход");
}