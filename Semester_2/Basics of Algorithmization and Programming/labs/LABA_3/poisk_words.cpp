#include "Header.h"    //подключение библиотеки

word* memory_struct(word *ab, int k); //функци€ выделени€/перераспределени€ пам€ти под массив структур

int poisk_words(word* &ab, char** str, int size)  //функци€ подсчета слов в тексте
{
	int k = 0; //счетчик количества найденных слов
	int a, b;  //индексы начала и конца очередного слова
	for (int i = 0; i < size; i++)
	{
		int j = 0; //счетчик
		for (j = 0; str[i][j] != '\0';)
		{
			//пропуск пробелов или знаков препинани€
			while (str[i][j] == ' ' || str[i][j] == '!' || str[i][j] == '\'' || str[i][j] == '\"' ||
			    str[i][j] == ';' || str[i][j] == ':' || str[i][j] == '?' || str[i][j] == '-' || 
				str[i][j] == '.' || str[i][j] == ',') j++;
			a = j; //запоминаем позицию начала слова
			//пропуск слова
			while ((str[i][j] >= '0' && str[i][j] <= '9') || (str[i][j] >= 'A' && str[i][j] <= 'Z') ||
				(str[i][j] >= 'a' && str[i][j] <= 'z') || (str[i][j] >= 'ј' && str[i][j] <= 'я') ||
				(str[i][j] >= 'а' && str[i][j] <= '€')) j++;
			b = j; //запоминаем позицию конца слова
			if (a != b)
			{
				ab = memory_struct(ab, k); //выделение пам€ти под структуру
				ab[k].repeat = 0;          //число повторений слова
				for(int t=0; t<n2+1; t++) ab[k].word[t] = 0; //обнуление строки дл€ слова
				int t = 0;                 //счетчик
				for (; a < b; t++, a++) ab[k].word[t] = str[i][a]; //цикл по переписи слова из данного текста в массив слов
				ab[k++].word[t] = '\0';
			}
		}
	}
	if (!k) //если слов не найдено
	{
		puts("—лов в тексте не найдено!");
		free(ab);   //освобождение пам€ти от массива структур
		for (int i = 0; i < size; i++) free(str[i]); //освобождение пам€ти от строк
		free(str);  //освобождение пам€ти от указателей на массив указателей
		exit(0);    //завершение работы программы
	}
	return k;       //вернуть число найденных слов
}

word* memory_struct(word *ab, int k) //функци€ выделени€ пам€ти под массив структур
{
	if (!k) ab = (word*)calloc(1, sizeof(word)); //выделение пам€ти под массив структур
	else ab = (word*)realloc(ab, (k + 1) * sizeof(word)); //выделение пам€ти под массив структур
	if (!ab)   //если пам€ть не выделена
	{
		puts("Segmentation error!");
		return 0;
	}
	return ab; //вернуть указатель на массив структур
}