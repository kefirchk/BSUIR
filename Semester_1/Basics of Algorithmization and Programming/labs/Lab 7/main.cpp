/* Лабораторная работа №7
Задание 5. Дан массив строк. Выделить слова из строк и записать их в массив.
Необходимо рассортировать массив слов по их длинам.
*/

#include "Headers.h"                             //подключение библиотек

int main()                                       //главная функция
{
	SetConsoleCP(1251);                          //русификация консоли
	SetConsoleOutputCP(1251);
	setlocale(LC_ALL, "Rus");
	for (;;)
	{
		int n = 0, size = 0; char number = 0;    //объявление переменных, где n - число строк, size - размер строк, number - промежуточная переменная
		char** str = NULL, *new_str = NULL;      //str - указатель на массив указателей, new_str - указатель на строку, содержащую все выделенные слова
		char choice = 0;                         //choice - промежуточная переменная для продолжения бесконечного цикла или же выхода из него 
		input_n(n, choice);                      //вызов функции ввода количества строк
		input_size(size, choice);                //обращение к функции ввода размера строк
		str = memory_for_str(n, size, str);      //обращение к функции выделения памяти под массив строк
		input_text(n, size, str);                //вызов функции ввода текста
		output_text(str, n);                     //вызов функции вывода введенного текста
		search_words(str, n, size);              //обращение к функции поиска слов в тексте
		output_highlighted_words(n, str);        //вызов функции вывода выделенных слов в тексте
		number = choose_option_sort(number);     //обращение к функции, которая предлагает вариант вывода сортированных слов (по убыванию или по возрастанию)
		realloc_str(n, str, size);               //обращение к функции перерапределения памяти
		choice_to_sort_text(choice);             //вызов функции, которая предлагает сортировать слова по строкам или же независимо от расположения в тексте
		if (choice=='1')                         //сортировка слов по строкам
		{
			sort_by_row(str, n, number);         //вызов функции сортировки слов по их длине   
			output_complete_text(str, n);        //вызов функции вывода отсортированных слов
		}
		else                                     //сортировка слов независимо от их расположения в тексте
		{
			int num = 0;                         //num - размер строки new_str
			lenght_strok(n, num, str);           //обращение к функции вычисления нужной длины для строки new_str 
			memory_for_new_str(num, new_str);    //функция выделения памяти под указатель на строку new_str
			str_equals_new_str(n, new_str, str); //вызов функции занесения слов в строку new_str
			output_one_str_of_words(new_str);    //обращение к функции вывода строки new_str 
			sort_all_text(new_str, number);      //сортировка слов по их длине в строке new_str
			output_complete_text_2(new_str, num);//вывод отсортированной строки new_str
		}
		clean_memory(str, n, new_str, choice);   //освобождение памяти от указателя на массив указателей и от указателей на строки
		n = add_offer(choice);                   //обращение к функции, которая предлагает продолжить выполнение программы
		if (n == 1) break;                       //условия завершения программы
	}
	exit(0);                                     //завершение программы
}