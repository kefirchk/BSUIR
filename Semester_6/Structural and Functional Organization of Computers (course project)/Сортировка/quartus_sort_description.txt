======================================================================================================
Зарезервированные переменные (константы): 
1. Начало array (arr_begin, &arr_begin = $512, arr_begin = 520/8).
2. Размер array (arr_size, &arr_size = $513, arr_size = 8).
3. Const (16) (&const = $514, const = 16).
4. Ноль (0) (&zero = $515 $123, zero = 0).
5. Петерка (5) (&five = $516, five = 5).
5. Четверка (4) (&four = $517, four = 4).

=> Ячейки $512-$515 - зарезервированы под константы. 
   Ячейки $520-$527 - зарезервированы под массив.

Для временных переменных использовать ячейки $528-$1023.

Доступные РОН: R1-R16
Память команд: $0 - $511
Память данных: $512 - $1023

Обозначения:
* '$' - адрес.
* '*' - разадресация, т.е. получение значение по адресу.
* '&' - получение адреса
* '[$???]' - получение значения по адресу $???.
* '???' - число от 0 до 1023.

======================================================================================================
IP |SORT PROC
000|	mov R16, [$512]	;R16 = arr_begin (const), R16 = 8
004|	mov R15, [$516]	;R15 = 5
008|	mov R14, [$517]	;R14 = 4
012|	mov R13, [$514]	;R13 = 16
  
016|	mov R1, [$513]	;R1(cx) = arr_size
020|	dec R1 		;R1(cx) = arr_size - 1     	
  
024|  	next_scan:
024|		mov R2, R1			;R2(bx) = R1(cx)                             
028|      	mov R3, [$515]			;R3(si) is index number, R3(si) = 0
        
032|      	next_comp:

		;Цель: R5(al) = *(&arr_begin + si) = array[si]
			;0. R5(al) = *(R16(arr_begin) + R3(si))
			;1. R4 = R16(arr_begin)
			;1. R4 += R3(si), R4 = &(array[si]) (т.е. в R4 хранится адрес ячейки array[si])
			;3. R5 = *R4
		;Реализация:
032|			mov R4, R16		;1. R4 = R16(arr_begin), R4 = 8
036|			add R4, R3		;2. R4 += R3, R4 = (arr_begin + si) = &(array[si])
040|			mov $530 <- R4		;В ячейку с адресом $530 записываем адрес ячейки array[si], в R4 хранится адрес!!!
044|			MOV $542 <- R4
048|			JMP $540
540|			MOV R5 <- [$[$541 + $542]] ;В R5 записываем значение по адресу, который лежит в ячейке $530, т.е. значение array[si]
544|			JMP $52 
		;Т.о. R5(al) = array[si], R4 = [$530] = &(array[si])

  		;Цель: R6(dl) = array[si+1]
			;0. R6(dl) = *(R4(arr_begin + si) + 1)
			;1. R7 = R4(arr_begin + si)
			;2. R7 += 1, R5 = &(array[si + 1]) (т.е. в R5 хранится адрес ячейки array[si + 1]
			;3. R6 = *R7
		;Реализация:
052|			mov R7, R4		;1. R7 = R4(arr_begin + si)
056|			inc R7			;2. R7 += 1, R7 = (arr_begin + si + 1) = &(array[si + 1])
060|			mov $534 <- R7		;В ячейке с адресом $534 хранится адрес ячейки array[si + 1], в R7 хранится адрес!!!

064|			MOV $550 <- R7
068|			JMP $548
548|			MOV R6 <- [$[$549 + $550]] ;В R6 записываем значение по адресу, который лежит в ячейке $534, т.е. значение array[si + 1]
552|			JMP $72 

		;Т.о. R6(dl) = array[si + 1], R7 = [$534] = &(array[si + 1])

072|          		cmp R5, R6		;R5(al) ? R6(dl)
076|          		jc $no_swap ($100)	;if  (R5(al) < R6(dl)) => go to no_swap
						;else (R5(al) > R6(dl)):
			
		;Подготовка:
080|			mov $531, R15				;Запись в ячейке $531 значения '6'
084|			mov $535, R14				;Запись в ячейке $535 значения '5'
088|			mov $529, R13				;+512 к адресу
092|			mov $533, R13				;+512 к адресу
			
096|			jmp $528
528|			mov $(значение ячейки $529 и $530) <- R6;Запись значения R6(dl) в ячейку, адрес которой хранится в ячейке с адресом $529 и $530		
								;т.е. array[si] = R6(dl)

532|			mov $(значение ячейки $533 и $534) <- R5;Запись значения R5(al) в ячейку, адрес которой хранится в ячейке с адресом $533 и $534			
								;т.е. array[si + 1] = R5(al)
536|			jmp $100


100|		no_swap:
100|          		inc R3			;R3(si) += 1
104|          		dec R2			;R2(bx) -= 1
108|          		jnz $next_comp ($32)	;if (bx != 0) go to next_comp, else go to next_scan

		;Цель: loop next_scan (while(--cx))
		;Реализация:
112|			dec R1			;1. R1(cx) -= 1
116|			cmp R1, $515		;2. R1(cx) ? 0
120|			jnz $next_scan ($24)
124|			hlt
   |ENDP
======================================================================================================