#pragma once
#include "CountingMachine.h"  //подключение класса "CountingMachine"

class StationaryCM : public CountingMachine   //класс "Стационарная ВМ"
{
protected:
	char location[80];        //местоположение
public:

	StationaryCM();                          //конструктор без параметров
	StationaryCM(char* Brand, int w, char* Location); //конструктор с параметрами
	StationaryCM(const StationaryCM& SCM);   //конструктор копирования
	StationaryCM(StationaryCM&& SCM);       //конструктор перемещения
	~StationaryCM();                         //деструктор

	StationaryCM& operator=(const StationaryCM& SCM);   //оператор присваивания
	StationaryCM& operator=(StationaryCM&& SCM);       //оператор присваивания перемещения

	void setLocation(const char*);   //метод задания местоположения
	char* getLocation();       //метод получения местоположения

	virtual void beginOfTable(); //метод вывода начала таблицы
	virtual void outputHat();  //метод вывода шапки таблицы
	virtual void endOfHat();   //конец шапки
	virtual void endOfTable(); //метод вывода конца таблицы(подрисовка)

	friend ostream& operator<<(ostream& out, const StationaryCM& SCM); //оператор << для вывода
	friend istream& operator>>(istream& in, StationaryCM& SCM);        //оператор >> для ввода
	friend ofstream& operator<<(ofstream& fout, const StationaryCM& SCM); //оператор << для вывода
	friend ifstream& operator>>(ifstream& fin, StationaryCM& SCM);        //оператор >> для ввода
	friend fstream& operator>>(fstream& fin, StationaryCM& SCM);
	friend fstream& operator<<(fstream& fout, const StationaryCM& SCM);
};